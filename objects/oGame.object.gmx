<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

playerpoints[0] = 0;
playerpoints[1] = 0;

gameover = false;
winner = 0;

playercolour[0] = c_maroon;
playercolour[1] = c_blue;

count = 0;
deathtimer = 45;

countdowntimer = 0;
countdown = true;
crashtimer = 50;

def_pos[0, 0] = 10;
def_pos[0, 1] = room_height/2 - 6;
off_pos[0, 0] = 20;
off_pos[0, 1] = room_height/2;

def_pos[1, 0] = room_width - 10;
def_pos[1, 1] = room_height/2  - 6;
off_pos[1, 0] = room_width - 20;
off_pos[1, 1] = room_height/2;

wall_thickness = 10;

left_wall[0] = 0 - wall_thickness;
left_wall[1] = 0 - wall_thickness;
right_wall[0] = room_width;
right_wall[1] = 0 - wall_thickness;

top_wall[0] = 0;
top_wall[1] = 0;
bot_wall[0] = 0;
bot_wall[1] = room_height;

base_colour = c_white;
hue = 0;

anal_sticks[2, 4] = 0; // huhuhu, anal

anal_stick[0, 0] = gp_axislh
anal_stick[0, 1] = gp_axislv
anal_stick[0, 2] = gp_axisrh
anal_stick[0, 3] = gp_axisrv

anal_stick[1, 0] = gp_axisrh
anal_stick[1, 1] = gp_axisrv
anal_stick[1, 2] = gp_axislh
anal_stick[1, 3] = gp_axislv
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instances
if !instance_exists(oScreen)
{
    instance_create(0, 0, oScreen);
}

//global.player[0] = instance_create(0, 0, oPlayer);
//global.player[1] = instance_create(0, 0, oPlayer);

//createPaddles(def_pos[0, 0], def_pos[0, 1], off_pos[0, 0], off_pos[0, 1], 0, c_maroon);
//createPaddles(def_pos[1, 0], def_pos[1, 1], off_pos[1, 0], off_pos[1, 1], 1, c_blue);

createDefense(def_pos[0, 0], def_pos[0, 1], 0);
createDefense(def_pos[1, 0], def_pos[1, 1], 1);

createSidewall(left_wall[0], left_wall[1], wall_thickness, 0);
createSidewall(right_wall[0], right_wall[1], wall_thickness, 1);

createHorizontalwall(top_wall[0], top_wall[1]);
createHorizontalwall(bot_wall[0], bot_wall[1]);

createSide(def_pos[0, 0], def_pos[0, 1], 0);
createSide(def_pos[1, 0], def_pos[1, 1], 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object Controller
if instance_number(oOffense) == 0
{
    createOffense(off_pos[0, 0], off_pos[0, 1], 0, playercolour[0]);
    createOffense(off_pos[1, 0], off_pos[1, 1], 1, playercolour[1]);
    resetOffense();
}
if instance_number(oOffense) == 1
{
    count += 1;
}
if count &gt;= deathtimer
{
    var opp = instance_nearest(x, y, oOffense);
    if opp.player_num == 0
    {
        var num = 1;
    }
    else
    {
        var num = 0;
    }
    createOffense(off_pos[num, 0], off_pos[num, 1], num, playercolour[num]);
    createParticles(off_pos[num, 0], off_pos[num, 1], playercolour[num]);
    audio_play_sound(sndRespawn, 1, false);
    count = 0;
}
if countdown == true
{
    countdowntimer += 1;
    if countdowntimer &gt;= crashtimer
    {
        countdown = false;
        countdowntimer = 0;
    }
}
if playerpoints[0] &gt;= 5 or playerpoints[1] &gt;= 5
{
    gameover = true;
    if !instance_exists(oMenu)
    {
        instance_create(0, 0, oMenu);
    }
    var i;
    for (i = 0; i &lt; 2; i++)
    {
        if playerpoints[i] &gt;= 5
        {
            winner = i + 1;
        }
    }
}
if keyboard_check(vk_escape)
{
    game_end();
}
if global.coolmode == true
{
    base_colour = make_color_hsv(hue, 255, 255);
    hue += 10;
}
else
{
    base_colour = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Score
if gameover == true
{
    draw_set_alpha(0.2);
}
draw_set_font(fontScore);
draw_set_halign(fa_center);
draw_set_circle_precision(4);

if countdowntimer &gt; 0
{
    draw_text_colour(room_width/2, room_height/2, ceil((crashtimer/countdowntimer)*4), base_colour, base_colour, base_colour, base_colour, 1);
}

draw_text_colour(10, 2, string(playerpoints[0]), c_red, c_red, c_red, c_red, 0.2);
draw_text_colour(room_width - 10, 2, string(playerpoints[1]), c_blue, c_blue, c_blue, c_blue, 0.2);
draw_set_alpha(0.1);
draw_line_width_colour(room_width/2, -1, room_width/2, room_height, 2, base_colour, base_colour);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

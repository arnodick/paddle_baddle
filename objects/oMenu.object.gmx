<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

colour = c_yellow;
colour2 = c_orange;

title_pos = room_height/2 - 20; // the y position of the title

restartgame = false;

menuInit(working_directory + "menu.txt", 40, 10); //opens and reads a text file, making buttons out of each line of text. argument1 is y position of top of menu, argument2 is line height
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game Over

menuSelect(); //checks which button is selected given gamepad left stick input

//checks for confirmation button press of selected option (can't really make a generic script out of this, because each menu does different things, so switch will vary a lot
if menuConfirm() == true //checks if gamepad has pressed A or Start
{
    switch (selection) //executes whichever option was selected when button pressed
    {
    case 0: //rematch
        audio_play_sound(sndBounce, 1, false);
        restartgame = true;
        break;
    case 1: //return to title
        room_goto(rTitle);
        instance_destroy();
        break;
    default: //default return to title (it's important to have this, in case you don't set switch option for all of the buttons that were created!)
        room_goto(rTitle);
        instance_destroy();
        break;
    }
}

if restartgame == true
{
    if !audio_is_playing(sndBounce)
    {
        instance_destroy();
        room_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu
//winner title stuff
//MAKE THIS TEXT RED OR BLUE DEPENDING ON WHO WON!
draw_text_colour(room_width/2, title_pos,               "PLAYER " + string(oGame.winner),   colour, colour, colour2, colour2, 1);
draw_text_colour(room_width/2, title_pos + text_line,   "HAS BECOME",                       colour, colour, colour2, colour2, 1);
draw_text_colour(room_width/2, title_pos + text_line*2, "THE WINNER",                       colour, colour, colour2, colour2, 1);

menuButtons(menu_pos, text_line, oGame.base_colour);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
